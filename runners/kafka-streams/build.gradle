/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import groovy.json.JsonOutput

plugins { id 'org.apache.beam.module' }
applyJavaNature(automaticModuleName: 'org.apache.beam.runners.kafka.streams', enableChecker: false, ignoreRawtypeErrors: true)

description = "Apache Beam :: Runners :: Kafka-Streams"

evaluationDependsOn(":sdks:java:core")
evaluationDependsOn(":runners:core-java")
evaluationDependsOn(":runners:core-construction-java")

configurations {
  validatesRunner
}

dependencies {
  compile project(path: ":model:pipeline", configuration: "shadow")
  compile project(path: ":sdks:java:core", configuration: "shadow")
  compile project(":runners:core-java")
  compile library.java.kafka_streams
  compile library.java.slf4j_api
  compileOnly library.java.kafka_streams_test_utils
  testCompile library.java.junit
  testCompile library.java.mockito_core
  testCompile library.java.slf4j_simple
  testCompile library.java.kafka_streams_test_utils
  validatesRunner project(path: ":sdks:java:core", configuration: "shadowTest")
  validatesRunner project(path: ":runners:core-java", configuration: "testRuntime")
  validatesRunner project(path: ":runners:core-construction-java", configuration: "testRuntime")
  validatesRunner project(path: project.path, configuration: "testRuntime")
  validatesRunner library.java.kafka_streams_test_utils
}

task validatesRunnerStreaming(type: Test) {
  group = "Verification"
  systemProperty "beamTestPipelineOptions", JsonOutput.toJson([
      "--runner=TestKafkaStreamsRunner",
      "--experiments=beam_fn_api,use_runner_v2"])
  classpath = configurations.validatesRunner
  testClassesDirs = files(
      project(":sdks:java:core").sourceSets.test.output.classesDirs,
      project(":runners:core-java").sourceSets.test.output.classesDirs,
      project.sourceSets.test.output.classesDirs)
  maxHeapSize = '4G'
  maxParallelForks = 4
  useJUnit {
    includeCategories 'org.apache.beam.sdk.testing.ValidatesRunner'
    excludeCategories 'org.apache.beam.sdk.testing.UsesRequiresTimeSortedInput'
  }
}

task validatesRunner {
  group = "Verification"
  description "Validates Kafka Streams Runner"
  dependsOn validatesRunnerStreaming
}
